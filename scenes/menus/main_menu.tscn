[gd_scene load_steps=7 format=3 uid="uid://ffncciksi1tw"]

[ext_resource type="Script" uid="uid://cevfgj7o1enyt" path="res://scripts/menus/main_menu.gd" id="1_1dabp"]
[ext_resource type="Theme" uid="uid://b3kq74llqlv3x" path="res://assets/themes/MinimalUI4/MinimalUI.tres" id="1_ovrgc"]
[ext_resource type="Texture2D" uid="uid://50r4os1n6gv5" path="res://tundra_view_1.png" id="3_2o76q"]

[sub_resource type="Shader" id="Shader_0ddcg"]
code = "shader_type canvas_item;

// Snow appearance parameters
uniform float spread : hint_range(0.0, 1.5) = 0.5;        // Snowflake spread
uniform float size : hint_range(0.01, 5.0) = 0.5;        // Snowflake size
uniform vec4 snow_color : source_color = vec4(1.0);      // Snow color
uniform float snow_transparency: hint_range(-0.5, 1.0) = 0.2;   // Intensity of the snow transparency

// Snow movement parameters
uniform float speed : hint_range(0.0, 10.0) = 0.5;       // Fall speed
uniform float wind : hint_range(-2.0, 2.0) = 0.0;        // Wind direction and strength
uniform int num_of_layers = 40;                          // Depth layers

// Constants for noise generation
const mat3 NOISE_MATRIX = mat3(
    vec3(13.323122, 23.5112, 21.71123),
    vec3(21.1212, 28.7312, 11.9312),
    vec3(21.8112, 14.7212, 61.3934)
);

// Helper function to generate snowflake pattern
vec3 generate_snowflake(vec2 coord, float layer_index, float time, float wind_strength) {
    // Scale coordinates based on layer depth
    float layer_scale = 1.0 + layer_index * 0.5 / (max(size, 0.01) * 2.0);
    vec2 scaled_coord = coord * layer_scale;

    // Apply movement (falling + wind)
    vec2 movement = vec2(
        scaled_coord.y * (spread * mod(layer_index * 7.238917, 1.0) - spread * 0.5) +
        (-wind_strength) * speed * time * 0.5,  // Reverse the wind direction by negating wind_strength
        -speed * time / (1.0 + layer_index * 0.5 * 0.03)
    );
    vec2 final_coord = scaled_coord + movement;

    // Generate noise pattern
    vec3 noise_input = vec3(floor(final_coord), 31.189 + layer_index);
    vec3 noise_val = floor(noise_input) * 0.00001 + fract(noise_input);
    vec3 random = fract((31415.9 + noise_val) / fract(NOISE_MATRIX * noise_val));

    // Calculate snowflake shape
    vec2 shape = abs(mod(final_coord, 1.0) - 0.5 + 0.9 * random.xy - 0.45);
    shape += 0.01 * abs(2.0 * fract(10.0 * final_coord.yx) - 1.0);

    // Calculate edge softness
    float depth_offset = 5.0 * sin(time * 0.1);
    float edge_softness = 0.005 + 0.05 * min(0.5 * abs(layer_index - 5.0 - depth_offset), 1.0);

    // Calculate final shape
    float shape_value = 0.6 * max(shape.x - shape.y, shape.x + shape.y) + max(shape.x, shape.y) - 0.01;

    return vec3(smoothstep(edge_softness, -edge_softness, shape_value) *
                (random.x / (1.0 + 0.02 * layer_index * 0.5)));
}

void fragment() {
    vec3 snow_accumulation = vec3(0.0);

    // Generate snow for each layer
    for (int i = 0; i < num_of_layers; i++) {
        snow_accumulation += generate_snowflake(UV, float(i), TIME, wind);
    }

    // Calculate final color
    float snow_intensity = clamp(length(snow_accumulation), 0.0, 1.0);
	vec4 base_color = vec4(0.0);

    // Apply transparency effect to the snow color
    vec4 transparency_color = vec4(snow_color.rgb * (1.0 + snow_transparency), snow_intensity);

    COLOR = mix(base_color, transparency_color, snow_intensity);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_2o76q"]
shader = SubResource("Shader_0ddcg")
shader_parameter/spread = 0.5
shader_parameter/size = 0.5
shader_parameter/snow_color = Color(1, 1, 1, 1)
shader_parameter/snow_transparency = 0.6
shader_parameter/speed = 0.5
shader_parameter/wind = 0.0
shader_parameter/num_of_layers = 40

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_2o76q"]
bg_color = Color(0, 0, 0, 0)

[node name="MainMenu" type="Control" node_paths=PackedStringArray("host_game_button", "join_game_button", "secondary_network_menu_parent", "toggle_secondary_network_checkbox")]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme = ExtResource("1_ovrgc")
script = ExtResource("1_1dabp")
host_game_button = NodePath("Menu/VBoxContainer/HostGame")
join_game_button = NodePath("Menu/VBoxContainer/JoinGame")
secondary_network_menu_parent = NodePath("SecondaryNetworkMenuParent")
toggle_secondary_network_checkbox = NodePath("Menu/VBoxContainer/SecondaryToggle")

[node name="Panel" type="Panel" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="MenuBackground" type="TextureRect" parent="Panel"]
self_modulate = Color(1, 1, 1, 0.831373)
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("3_2o76q")
expand_mode = 2

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_2o76q")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Menu" type="Panel" parent="."]
self_modulate = Color(1, 1, 1, 0)
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
grow_horizontal = 2

[node name="VBoxContainer" type="VBoxContainer" parent="Menu"]
custom_minimum_size = Vector2(0, 500)
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -100.0
offset_right = 100.0
offset_bottom = 500.0
grow_horizontal = 2

[node name="Label" type="Label" parent="Menu/VBoxContainer"]
layout_mode = 2
theme_override_font_sizes/font_size = 48
text = "
TUNDRA"
horizontal_alignment = 1

[node name="SecondaryToggle" type="CheckButton" parent="Menu/VBoxContainer"]
visible = false
layout_mode = 2
theme_override_font_sizes/font_size = 18
text = "Enable Noray P2P"
flat = true

[node name="HostGame" type="Button" parent="Menu/VBoxContainer"]
custom_minimum_size = Vector2(200, 0)
layout_mode = 2
text = "Host - Local"

[node name="JoinGame" type="Button" parent="Menu/VBoxContainer"]
layout_mode = 2
text = "Join - Local"

[node name="Join Dedicated Server" type="Button" parent="Menu/VBoxContainer"]
layout_mode = 2
text = "Join - Dedicated Server"

[node name="Exit" type="Button" parent="Menu/VBoxContainer"]
layout_mode = 2
theme_override_font_sizes/font_size = 16
text = "Exit"

[node name="SecondaryNetworkMenuParent" type="Panel" parent="."]
custom_minimum_size = Vector2(500, 300)
layout_mode = 1
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_top = -100.0
offset_bottom = -100.0
grow_horizontal = 2
grow_vertical = 0
theme_override_styles/panel = SubResource("StyleBoxFlat_2o76q")

[connection signal="toggled" from="Menu/VBoxContainer/SecondaryToggle" to="." method="_on_secondary_toggle_toggled"]
[connection signal="pressed" from="Menu/VBoxContainer/HostGame" to="." method="host_game"]
[connection signal="pressed" from="Menu/VBoxContainer/JoinGame" to="." method="join_game"]
[connection signal="pressed" from="Menu/VBoxContainer/Join Dedicated Server" to="." method="join_game_dedicated_server"]
[connection signal="pressed" from="Menu/VBoxContainer/Exit" to="." method="exit_game"]
